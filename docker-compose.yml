version: '3.8'

services:
  web:
    build: .
    ports: ["5000:5000"]
    environment: &app_env
      - FLASK_ENV=production
      - DB_HOST=db
      - SECRET_KEY=${SECRET_KEY}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    restart: unless-stopped

  migrations:
    build: .
    command: flask db upgrade
    environment: *app_env
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres_data: